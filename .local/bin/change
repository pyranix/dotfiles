#!/bin/bash
set -e

# Define the theme, wallpaper, and Qtile folder paths
QTHEME_DIR="$HOME/.qtheme"
WALLPAPER_DIR="$HOME/.wallpaper"
QTILE_CONFIG_DIR="$HOME/.config/qtile"

# Function to select a theme
select_theme() {
    theme_list=$(ls "$QTHEME_DIR")
    selected_theme=$(echo "$theme_list" | rofi -dmenu -p "Select Theme:")
    
    if [ -n "$selected_theme" ]; then
        apply_theme "$selected_theme"
    else
        notify-send -u low "No theme selected. Exiting..."
        exit 1
    fi
}

# Function to apply the selected theme
apply_theme() {
    local selected_theme="$1"
    SRC_PATH="$QTHEME_DIR/$selected_theme"
    DEST_PATH="$HOME/.config/"
    
    # Check if the theme directory exists
    if [ ! -d "$SRC_PATH" ]; then
        notify-send -u low "Error: Theme directory '$SRC_PATH' not found."
        exit 1
    fi

    # Copy the selected theme to the destination
    cp -r "$SRC_PATH/"* "$DEST_PATH"

    # Update the icon theme based on the selected theme
    case $selected_theme in
        "redrose")
            set_gnome_settings "adw-gtk3-red" "Tela-red"
            ;;
        "bluerod")
            set_gnome_settings "adw-gtk3-blue" "Tela-purple"
            ;;
        "nyoom")
            set_gnome_settings "adw-gtk3-dark" "Tela-black"
            ;;
    esac

    select_wallpaper
}

# Function to set GNOME settings for GTK and icon themes
set_gnome_settings() {
    local gtk_theme="$1"
    local icon_theme="$2"

    gsettings set org.gnome.desktop.interface gtk-theme "$gtk_theme"
    gsettings set org.gnome.desktop.interface icon-theme "$icon_theme"
}

# Function to select a wallpaper
select_wallpaper() {
    wallpaper_list=$(ls "$WALLPAPER_DIR")
    selected_wallpaper=$(echo "$wallpaper_list" | rofi -dmenu -p "Select Wallpaper:")

    if [ -n "$selected_wallpaper" ]; then
        # Set the selected wallpaper
        feh --bg-fill "$WALLPAPER_DIR/$selected_wallpaper"
        notify-send -u low "Wallpaper '$selected_wallpaper' set successfully!"
    else
        notify-send -u low "No wallpaper selected. Using the default wallpaper."
    fi

    # Update user directories
    xdg-user-dirs-update
    xdg-user-dirs-gtk-update

    # Display user directories
    xdg-user-dir

    restart_qtile
}

# Function to restart Qtile
restart_qtile() {
    if qtile cmd-obj -o cmd -f restart; then
        notify-send -u low "Qtile restarted successfully."
    else
        notify-send -u low "Error: Unable to restart Qtile. Check the configuration and try again."
    fi
}

# Main script

# Check if Rofi, Feh, or Qtile are installed
if ! command -v rofi &> /dev/null || ! command -v feh &> /dev/null || ! command -v qtile &> /dev/null; then
    notify-send -u low "Error: Rofi, feh, or qtile not found. Please install the required tools."
    exit 1
fi

# Check if the Qtile config directory exists
if [ ! -d "$QTILE_CONFIG_DIR" ]; then
    notify-send -u low "Error: Qtile config directory not found: $QTILE_CONFIG_DIR"
    exit 1
fi

# Start the script by selecting a theme
select_theme

exit 0
