#!/bin/bash
set -e

# Define the theme and wallpaper folder paths
qtheme_dir="$HOME/.qtheme"
wallpaper_dir="$HOME/.wallpaper"

# Function to select a theme
select_theme() {
    local theme_list selected_theme
    theme_list=$(ls "$qtheme_dir")
    selected_theme=$(echo "$theme_list" | rofi -dmenu -p "Select Theme:")

    if [ -n "$selected_theme" ]; then
        apply_theme "$selected_theme"
    else
        notify-send "No theme selected. Exiting..."
        exit 1
    fi
}

# Function to apply the selected theme
apply_theme() {
    local selected_theme src_path dest_path
    selected_theme="$1"
    src_path="$qtheme_dir/$selected_theme"
    dest_path="$HOME/.config/"

    # Check if the theme directory exists
    if [ ! -d "$src_path" ]; then
        notify-send "Error: Theme directory '$src_path' not found."
        exit 1
    fi

    # Copy the selected theme to the destination
    cp -r "$src_path/"* "$dest_path"

    # Update the icon theme based on the selected theme
    case $selected_theme in
        "redrose")
            set_gnome_theme "adw-gtk3-red" "Tela-red"
            ;;
        "bluerod")
            set_gnome_theme "adw-gtk3-blue" "Tela-purple"
            ;;
        "nyoom")
            set_gnome_theme "adw-gtk3-dark" "Tela-black"
            ;;
        *)
            notify-send "Unknown theme: $selected_theme"
            exit 1
            ;;
    esac

    select_wallpaper
}

# Function to set GNOME themes
set_gnome_theme() {
    gsettings set org.gnome.desktop.interface gtk-theme "$1"
    gsettings set org.gnome.desktop.interface icon-theme "$2"
}

# Function to select a wallpaper
select_wallpaper() {
    local wallpaper_list selected_wallpaper
    wallpaper_list=$(ls "$wallpaper_dir")
    selected_wallpaper=$(echo "$wallpaper_list" | rofi -dmenu -p "Select Wallpaper:")

    if [ -n "$selected_wallpaper" ]; then
        # Set the selected wallpaper
        feh --bg-fill "$wallpaper_dir/$selected_wallpaper"
        notify-send "Wallpaper '$selected_wallpaper' set successfully!"
    else
        notify-send "No wallpaper selected. Using the default wallpaper."
    fi

    # Update user directories
    xdg-user-dirs-update
    xdg-user-dirs-gtk-update

    # Kill already running processes
    pkill -f "xsettingsd|firefox|dunst|thunar|ksuperkey"

    # Restart Qtile to apply the changes
    prompt_exit_qtile
}

# Function to confirm the action
confirm_option() {
  confirm=$(echo -e "Yes\nNo" | rofi -dmenu -i -p "Are you sure?" -columns 1 -width 10)
  [[ "$confirm" == "Yes" ]]
}

# Function to prompt for exiting Qtile with confirmation
prompt_exit_qtile() {
    if confirm_option; then
        qtile cmd-obj -o cmd -f shutdown
    else
        qtile cmd-obj -o cmd -f restart
        notify-send "Restarting the Qtile."
    fi
}

# Start the script by selecting a theme
select_theme
