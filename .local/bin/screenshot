#!/bin/bash
# shellcheck disable=SC2199
# shellcheck disable=SC2086
# shellcheck source=/dev/null
#
# Copyright (C) 2024-02 pyranix <pyranix@proton.me>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Configuration
NOTIFY_ICON="" # Nerd Fonts icon for notifications
TIMER_ICON=""  # Nerd Fonts icon for timer

# Functions

# Display notification with specified message
notify() {
  dunstify -u low -i "$NOTIFY_ICON" "$1"
}

# Countdown function with notifications
countdown() {
  for ((sec = $1; sec > 0; sec--)); do
    notify "Taking shot in: $sec $TIMER_ICON"
    sleep 1
  done
}

# Convert image to add shadow and background
convert_image() {
  convert "$1" \( +clone -background black -shadow 25x30+0+0 \) +swap -background '#bdc2be' -layers merge "$2"
}

# Take a screenshot of the entire screen
take_screenshot() {
  maim -u -f png "$1"
}

# Take a screenshot of a selected area
take_area_screenshot() {
  maim -s "$1"
}

# Take a screenshot of the active window
take_window_screenshot() {
  maim -i "$(xdotool getactivewindow)" "$1"
}

# Create a directory if it doesn't exist
create_directory() {
  [[ -d "$1" ]] || mkdir -p "$1" || { echo "Error creating directory: $1"; exit 1; }
}

# Main

timestamp=$(date +%Y-%m-%d-%H-%M-%S)
geometry=$(xrandr --current | awk '/current/ {print $8}')
pictures_dir="$(xdg-user-dir PICTURES)/Screenshots"
temp_file="${pictures_dir}/temp_${timestamp}.png"
file="${pictures_dir}/Screenshot_${timestamp}_${geometry}.png"

create_directory "$pictures_dir"

SCRIPT_NAME="screenshot"

# Options for rofi
options=(" Screenshot Now Full" " Screenshot In 5 Seconds" " Screenshot In 10 Seconds" " Screenshot Window" " Screenshot Area")

selected_option=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "$SCRIPT_NAME" -columns 1 -width 30) || exit 1

# Function to use rofi to prompt the user to open in viewnior
viewnior_prompt() {
  open_in_viewnior=$(echo -e "Yes\nNo" | rofi -dmenu -p "Open in viewnior?" -columns 1 -width 20)
  [[ "$open_in_viewnior" == "Yes" ]] && viewnior "$1"
}

case $selected_option in
" Screenshot Now Full" | " Screenshot In 5 Seconds" | " Screenshot In 10 Seconds")
  countdown "${selected_option: -1}" && take_screenshot "$temp_file" && convert_image "$temp_file" "$file" && notify "Screenshot taken after ${selected_option: -1} seconds."
  ;;
" Screenshot Window")
  take_window_screenshot "$temp_file" && convert_image "$temp_file" "$file" && notify "Window screenshot taken."
  ;;
" Screenshot Area")
  take_area_screenshot "$temp_file" && convert_image "$temp_file" "$file" && notify "Area screenshot taken."
  ;;
*)
  exit 1
  ;;
esac

viewnior_prompt "$file"

# Remove temp file
rm "$temp_file"

exit 0
